// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calc_occupancy_cpp
NumericMatrix calc_occupancy_cpp(List p_list, CharacterVector transient_states, CharacterVector all_states, NumericVector init_probs, int n, std::string delim);
RcppExport SEXP _mscalc_calc_occupancy_cpp(SEXP p_listSEXP, SEXP transient_statesSEXP, SEXP all_statesSEXP, SEXP init_probsSEXP, SEXP nSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type p_list(p_listSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type transient_states(transient_statesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type all_states(all_statesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type init_probs(init_probsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_occupancy_cpp(p_list, transient_states, all_states, init_probs, n, delim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mscalc_calc_occupancy_cpp", (DL_FUNC) &_mscalc_calc_occupancy_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_mscalc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
